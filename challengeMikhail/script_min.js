const t=require("fs");const e=Date.now();const o={};const s=[];function n(e){let o=0;for(let t of e){o|=1<<t.charCodeAt()}return o}function h(o,s){const n=[];if(s===1){for(let t of o){n.push([t])}}else{for(let t=0;t<o.length-1;t++){const c=[];const l=o[t];deepSet=o;let e=t+1;for(let t=e;t<deepSet.length;t++){const r=deepSet[t];if(!(r&l)){c.push(r)}}if(c[s-2]){const f=h(c,s-1);for(let t of f){t.push(l);n.push(t)}}}}return n}(""+t.readFileSync("./words_alpha.txt")).split("\r\n").forEach(t=>{if(t.length===5&&!/(.).*\1/.test(t)){const e=n(t);if(!o[e]){o[e]=[];s.push(e)}o[e].push(t)}});const c=h(s,5);console.log(`Processing time: ${Date.now()-e}ms`);console.log(`Sets count: ${c.length}`);const l=[];c.forEach(t=>{let n=[""];t.reverse().forEach(t=>{const s=[...n];o[t].forEach((e,t)=>{const o=s.map(t=>t=t?`${t}, ${e}`:e);if(t===0){n=o}else{n.push(...o)}})});l.push(...n)});console.log(`Total sets count with anagrams: ${l.length}`);t.writeFileSync("results.txt",l.join("\n"),"utf-8");